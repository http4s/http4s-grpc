/*
 * Copyright (c) 2018 Gary Coady / Fs2 Grpc Developers
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package org.http4s.grpc.sbt

import sbt._
import sbt.Keys._
import org.portablescala.sbtplatformdeps.PlatformDepsPlugin.autoImport._
import protocbridge.{Artifact, SandboxedJvmGenerator, Target}
import sbtprotoc.ProtocPlugin.autoImport.PB

object Http4sGrpcPlugin extends AutoPlugin {

  override def requires = sbtprotoc.ProtocPlugin
  override def trigger = NoTrigger

  object autoImport {
    val http4sGrpcVersion: String = BuildInfo.version
    val http4sGrpcOutputPath = settingKey[File]("Directory for sources generated by http4s-grpc")
    val http4sGrpcScalaPBOptions =
      settingKey[Seq[String]]("Options forwarded to the ScalaPB generator")
  }
  import autoImport._

  override def projectSettings: Seq[Def.Setting[_]] =
    List(
      Compile / http4sGrpcOutputPath := (Compile / sourceManaged).value / "http4s-grpc",
      Compile / http4sGrpcScalaPBOptions := Seq.empty,
      Compile / PB.targets +=
        Target(
          SandboxedJvmGenerator.forModule(
            "scala-http4s-grpc",
            Artifact(
              BuildInfo.organization,
              s"${BuildInfo.codeGeneratorModule}_${BuildInfo.scalaBinaryVersion}",
              BuildInfo.version,
            ),
            BuildInfo.codeGeneratorClass + "$",
            Nil,
          ),
          (Compile / http4sGrpcOutputPath).value,
          (Compile / http4sGrpcScalaPBOptions).value,
        ),
      libraryDependencies ++= Seq(
        BuildInfo.organization %%% BuildInfo.coreModule % BuildInfo.version
      ),
    )
}
